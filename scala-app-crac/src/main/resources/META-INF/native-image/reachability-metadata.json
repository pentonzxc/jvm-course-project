{
  "reflection": [
    {
      "type": "[Lio.micrometer.core.instrument.distribution.FixedBoundaryHistogram;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Lzio.http.Header$Accept$MediaTypeWithQFactor;"
    },
    {
      "type": "[Lzio.http.codec.PathCodec$Opt;"
    },
    {
      "type": "[[Ljava.lang.Object;"
    },
    {
      "type": "[[[Ljava.lang.Object;"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.AbstractTimeWindowHistogram",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowMax",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.netty.bootstrap.ServerBootstrap$1"
    },
    {
      "type": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor"
    },
    {
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.netty.channel.kqueue.KQueueEventLoop",
      "fields": [
        {
          "name": "wakenUp"
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.netty.handler.codec.http.HttpObjectAggregator"
    },
    {
      "type": "io.netty.handler.codec.http.HttpRequestDecoder"
    },
    {
      "type": "io.netty.handler.codec.http.HttpResponseEncoder"
    },
    {
      "type": "io.netty.handler.codec.http.HttpServerKeepAliveHandler"
    },
    {
      "type": "io.netty.handler.flush.FlushConsolidationHandler"
    },
    {
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.NativeLibraryUtil",
      "methods": [
        {
          "name": "loadLibrary",
          "parameterTypes": [
            "java.lang.String",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "java.io.FileDescriptor"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.invoke.VarHandle",
      "methods": [
        {
          "name": "releaseFence",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.net.InetSocketAddress"
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "MAX_MEMORY"
        },
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.ClosedChannelException"
    },
    {
      "type": "java.nio.channels.FileChannel"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "scala.Symbol",
      "methods": [
        {
          "name": "apply",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "scala.collection.concurrent.CNodeBase",
      "fields": [
        {
          "name": "csize"
        }
      ]
    },
    {
      "type": "scala.collection.concurrent.INodeBase",
      "fields": [
        {
          "name": "mainnode"
        }
      ]
    },
    {
      "type": "scala.collection.concurrent.MainNode",
      "fields": [
        {
          "name": "prev"
        }
      ]
    },
    {
      "type": "scala.collection.concurrent.TrieMap",
      "fields": [
        {
          "name": "root"
        }
      ]
    },
    {
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "zio.http.netty.server.ServerChannelInitializer"
    },
    {
      "type": "zio.http.netty.server.ServerInboundHandler"
    },
    {
      "type": "zio.internal.HeadPadding",
      "fields": [
        {
          "name": "headCounter"
        }
      ]
    },
    {
      "type": "zio.internal.TailPadding",
      "fields": [
        {
          "name": "tailCounter"
        }
      ]
    }
  ],
  "resources": [
    {
      "glob": "META-INF/native/libnetty_transport_native_kqueue_aarch_64.dylib"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_kqueue_aarch_64.jnilib"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    }
  ],
  "bundles": [],
  "jni": [
    {
      "type": "io.netty.channel.ChannelException"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion",
      "fields": [
        {
          "name": "file"
        },
        {
          "name": "transferred"
        }
      ]
    },
    {
      "type": "io.netty.channel.kqueue.BsdSocket"
    },
    {
      "type": "io.netty.channel.kqueue.KQueueEventArray"
    },
    {
      "type": "io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.kqueue.Native"
    },
    {
      "type": "io.netty.channel.unix.Buffer"
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "int",
            "int",
            "io.netty.channel.unix.DatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "io.netty.channel.unix.DomainDatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor"
    },
    {
      "type": "io.netty.channel.unix.LimitsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int[]"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.Socket"
    },
    {
      "type": "java.io.FileDescriptor",
      "fields": [
        {
          "name": "fd"
        }
      ]
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.net.InetSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "limit"
        },
        {
          "name": "position"
        }
      ],
      "methods": [
        {
          "name": "limit",
          "parameterTypes": []
        },
        {
          "name": "position",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.ClosedChannelException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.nio.ch.FileChannelImpl",
      "fields": [
        {
          "name": "fd"
        }
      ]
    }
  ]
}
